name: Build Libs

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'Platform/**'
      - '!Platform/libs/**'
  pull_request:
    paths:
      - 'Platform/**'
      - '!Platform/libs/**'
jobs:
  Build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x64
            target: win-x64
            lib: FosterAudioPlatform.dll
          - os: windows-latest
            arch: arm64
            target: win-arm64
            lib: FosterAudioPlatform.dll
          - os: macos-latest
            arch: x64-arm64
            target: osx
            lib: libFosterAudioPlatform.dylib
          - os: ubuntu-latest
            arch: x64
            target: linux-x64
            lib: libFosterAudioPlatform.so
          - os: ubuntu-latest
            arch: arm64
            target: linux-arm64
            lib: libFosterAudioPlatform.so
          - os: ubuntu-latest
            arch: arm32
            target: linux-arm32
            lib: libFosterAudioPlatform.so
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get CMake
        uses: lukka/get-cmake@v3.29.4
      - name: Setup Linux dependencies (arm64)
        if: ${{ runner.os == 'Linux' && matrix.arch == 'arm64' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu
          sudo sed -i "s/^deb/deb [arch=amd64,i386]/g" /etc/apt/sources.list
          echo "deb [arch=arm64,armhf] http://ports.ubuntu.com/ $(lsb_release -s -c) main universe multiverse restricted" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64,armhf] http://ports.ubuntu.com/ $(lsb_release -s -c)-updates main universe multiverse restricted" | sudo tee -a /etc/apt/sources.list
          sudo dpkg --add-architecture arm64
      - name: Setup Linux dependencies (arm32)
        if: ${{ runner.os == 'Linux' && matrix.arch == 'arm32' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf binutils-arm-linux-gnueabihf
          sudo sed -i "s/^deb/deb [arch=amd64,i386]/g" /etc/apt/sources.list
          echo "deb [arch=arm64,armhf] http://ports.ubuntu.com/ $(lsb_release -s -c) main universe multiverse restricted" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64,armhf] http://ports.ubuntu.com/ $(lsb_release -s -c)-updates main universe multiverse restricted" | sudo tee -a /etc/apt/sources.list
          sudo dpkg --add-architecture armhf
      - name: CMake Configure
        if: ${{ !(runner.os == 'Linux' && matrix.arch == 'arm64') && !(runner.os == 'Linux' && matrix.arch == 'arm32') }}
        run: cmake -B build -S Platform -DFOSTER_OVERRIDE_TARGET=${{matrix.target}}
      - name: CMake Configure (Linux-arm64)
        if: ${{ runner.os == 'Linux' && matrix.arch == 'arm64' }}
        run: PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig cmake -B build -S Platform -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -DCMAKE_SYSTEM_PROCESSOR=aarch64 -DCMAKE_SYSTEM_NAME=Linux -DFOSTER_OVERRIDE_TARGET=${{matrix.target}}
      - name: CMake Configure (Linux-arm32)
        if: ${{ runner.os == 'Linux' && matrix.arch == 'arm32' }}
        run: PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig cmake -B build -S Platform -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ -DCMAKE_SYSTEM_PROCESSOR=armv7l -DCMAKE_SYSTEM_NAME=Linux -DFOSTER_OVERRIDE_TARGET=${{matrix.target}}
      - name: CMake Build
        run: cmake --build build --config Release
      - name: Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.os}}-${{matrix.arch}}-build
          path: Platform/libs/${{matrix.target}}/${{matrix.lib}}
  UpdateLibs:
    if: github.ref == 'refs/heads/main'
    needs: [Build]
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download windows x64 lib
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-x64-build
          path: Platform/libs/win-x64
      - name: Download windows arm lib
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-arm64-build
          path: Platform/libs/win-arm64
      - name: Download macos lib
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-x64-arm64-build
          path: Platform/libs/osx
      - name: Download ubuntu lib
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-x64-build
          path: Platform/libs/linux-x64
      - name: Download ubuntu lib (arm64)
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-arm64-build
          path: Platform/libs/linux-arm64
      - name: Download ubuntu lib (arm32)
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-arm32-build
          path: Platform/libs/linux-arm32
      - name: Display structure of libs
        run: ls -R
        working-directory: Platform/libs
      - name: Commit changes
        uses: EndBug/add-and-commit@v9.1.3
        with:
          message: Updated platform libs
          committer_name: GitHub Actions
          committer_email: actions@github.com
